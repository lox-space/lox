/*
 * Copyright (c) 2024. Helge Eichhorn and the LOX contributors
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, you can obtain one at https://mozilla.org/MPL/2.0/.
 */

// Auto-generated by `lox-gen`. Do not edit!

use crate::frames::ReferenceFrame;
use crate::python::PyFrame;
impl ReferenceFrame for PyFrame {
    fn name(&self) -> String {
        match self {
            PyFrame::Icrf => "International Celestial Reference Frame".to_string(),
            PyFrame::IauSun => "IAU Body-Fixed Frame for the Sun".to_string(),
            PyFrame::IauMercury => "IAU Body-Fixed Frame for Mercury".to_string(),
            PyFrame::IauVenus => "IAU Body-Fixed Frame for Venus".to_string(),
            PyFrame::IauEarth => "IAU Body-Fixed Frame for Earth".to_string(),
            PyFrame::IauMars => "IAU Body-Fixed Frame for Mars".to_string(),
            PyFrame::IauJupiter => "IAU Body-Fixed Frame for Jupiter".to_string(),
            PyFrame::IauSaturn => "IAU Body-Fixed Frame for Saturn".to_string(),
            PyFrame::IauUranus => "IAU Body-Fixed Frame for Uranus".to_string(),
            PyFrame::IauNeptune => "IAU Body-Fixed Frame for Neptune".to_string(),
            PyFrame::IauPluto => "IAU Body-Fixed Frame for Pluto".to_string(),
            PyFrame::IauMoon => "IAU Body-Fixed Frame for the Moon".to_string(),
            PyFrame::IauPhobos => "IAU Body-Fixed Frame for Phobos".to_string(),
            PyFrame::IauDeimos => "IAU Body-Fixed Frame for Deimos".to_string(),
            PyFrame::IauIo => "IAU Body-Fixed Frame for Io".to_string(),
            PyFrame::IauEuropa => "IAU Body-Fixed Frame for Europa".to_string(),
            PyFrame::IauGanymede => "IAU Body-Fixed Frame for Ganymede".to_string(),
            PyFrame::IauCallisto => "IAU Body-Fixed Frame for Callisto".to_string(),
            PyFrame::IauAmalthea => "IAU Body-Fixed Frame for Amalthea".to_string(),
            PyFrame::IauHimalia => "IAU Body-Fixed Frame for Himalia".to_string(),
            PyFrame::IauElara => "IAU Body-Fixed Frame for Elara".to_string(),
            PyFrame::IauPasiphae => "IAU Body-Fixed Frame for Pasiphae".to_string(),
            PyFrame::IauSinope => "IAU Body-Fixed Frame for Sinope".to_string(),
            PyFrame::IauLysithea => "IAU Body-Fixed Frame for Lysithea".to_string(),
            PyFrame::IauCarme => "IAU Body-Fixed Frame for Carme".to_string(),
            PyFrame::IauAnanke => "IAU Body-Fixed Frame for Ananke".to_string(),
            PyFrame::IauLeda => "IAU Body-Fixed Frame for Leda".to_string(),
            PyFrame::IauThebe => "IAU Body-Fixed Frame for Thebe".to_string(),
            PyFrame::IauAdrastea => "IAU Body-Fixed Frame for Adrastea".to_string(),
            PyFrame::IauMetis => "IAU Body-Fixed Frame for Metis".to_string(),
            PyFrame::IauCallirrhoe => "IAU Body-Fixed Frame for Callirrhoe".to_string(),
            PyFrame::IauThemisto => "IAU Body-Fixed Frame for Themisto".to_string(),
            PyFrame::IauMagaclite => "IAU Body-Fixed Frame for Magaclite".to_string(),
            PyFrame::IauTaygete => "IAU Body-Fixed Frame for Taygete".to_string(),
            PyFrame::IauChaldene => "IAU Body-Fixed Frame for Chaldene".to_string(),
            PyFrame::IauHarpalyke => "IAU Body-Fixed Frame for Harpalyke".to_string(),
            PyFrame::IauKalyke => "IAU Body-Fixed Frame for Kalyke".to_string(),
            PyFrame::IauIocaste => "IAU Body-Fixed Frame for Iocaste".to_string(),
            PyFrame::IauErinome => "IAU Body-Fixed Frame for Erinome".to_string(),
            PyFrame::IauIsonoe => "IAU Body-Fixed Frame for Isonoe".to_string(),
            PyFrame::IauPraxidike => "IAU Body-Fixed Frame for Praxidike".to_string(),
            PyFrame::IauAutonoe => "IAU Body-Fixed Frame for Autonoe".to_string(),
            PyFrame::IauThyone => "IAU Body-Fixed Frame for Thyone".to_string(),
            PyFrame::IauHermippe => "IAU Body-Fixed Frame for Hermippe".to_string(),
            PyFrame::IauAitne => "IAU Body-Fixed Frame for Aitne".to_string(),
            PyFrame::IauEurydome => "IAU Body-Fixed Frame for Eurydome".to_string(),
            PyFrame::IauEuanthe => "IAU Body-Fixed Frame for Euanthe".to_string(),
            PyFrame::IauEuporie => "IAU Body-Fixed Frame for Euporie".to_string(),
            PyFrame::IauOrthosie => "IAU Body-Fixed Frame for Orthosie".to_string(),
            PyFrame::IauSponde => "IAU Body-Fixed Frame for Sponde".to_string(),
            PyFrame::IauKale => "IAU Body-Fixed Frame for Kale".to_string(),
            PyFrame::IauPasithee => "IAU Body-Fixed Frame for Pasithee".to_string(),
            PyFrame::IauHegemone => "IAU Body-Fixed Frame for Hegemone".to_string(),
            PyFrame::IauMneme => "IAU Body-Fixed Frame for Mneme".to_string(),
            PyFrame::IauAoede => "IAU Body-Fixed Frame for Aoede".to_string(),
            PyFrame::IauThelxinoe => "IAU Body-Fixed Frame for Thelxinoe".to_string(),
            PyFrame::IauArche => "IAU Body-Fixed Frame for Arche".to_string(),
            PyFrame::IauKallichore => "IAU Body-Fixed Frame for Kallichore".to_string(),
            PyFrame::IauHelike => "IAU Body-Fixed Frame for Helike".to_string(),
            PyFrame::IauCarpo => "IAU Body-Fixed Frame for Carpo".to_string(),
            PyFrame::IauEukelade => "IAU Body-Fixed Frame for Eukelade".to_string(),
            PyFrame::IauCyllene => "IAU Body-Fixed Frame for Cyllene".to_string(),
            PyFrame::IauKore => "IAU Body-Fixed Frame for Kore".to_string(),
            PyFrame::IauHerse => "IAU Body-Fixed Frame for Herse".to_string(),
            PyFrame::IauDia => "IAU Body-Fixed Frame for Dia".to_string(),
            PyFrame::IauMimas => "IAU Body-Fixed Frame for Mimas".to_string(),
            PyFrame::IauEnceladus => "IAU Body-Fixed Frame for Enceladus".to_string(),
            PyFrame::IauTethys => "IAU Body-Fixed Frame for Tethys".to_string(),
            PyFrame::IauDione => "IAU Body-Fixed Frame for Dione".to_string(),
            PyFrame::IauRhea => "IAU Body-Fixed Frame for Rhea".to_string(),
            PyFrame::IauTitan => "IAU Body-Fixed Frame for Titan".to_string(),
            PyFrame::IauHyperion => "IAU Body-Fixed Frame for Hyperion".to_string(),
            PyFrame::IauIapetus => "IAU Body-Fixed Frame for Iapetus".to_string(),
            PyFrame::IauPhoebe => "IAU Body-Fixed Frame for Phoebe".to_string(),
            PyFrame::IauJanus => "IAU Body-Fixed Frame for Janus".to_string(),
            PyFrame::IauEpimetheus => "IAU Body-Fixed Frame for Epimetheus".to_string(),
            PyFrame::IauHelene => "IAU Body-Fixed Frame for Helene".to_string(),
            PyFrame::IauTelesto => "IAU Body-Fixed Frame for Telesto".to_string(),
            PyFrame::IauCalypso => "IAU Body-Fixed Frame for Calypso".to_string(),
            PyFrame::IauAtlas => "IAU Body-Fixed Frame for Atlas".to_string(),
            PyFrame::IauPrometheus => "IAU Body-Fixed Frame for Prometheus".to_string(),
            PyFrame::IauPandora => "IAU Body-Fixed Frame for Pandora".to_string(),
            PyFrame::IauPan => "IAU Body-Fixed Frame for Pan".to_string(),
            PyFrame::IauYmir => "IAU Body-Fixed Frame for Ymir".to_string(),
            PyFrame::IauPaaliaq => "IAU Body-Fixed Frame for Paaliaq".to_string(),
            PyFrame::IauTarvos => "IAU Body-Fixed Frame for Tarvos".to_string(),
            PyFrame::IauIjiraq => "IAU Body-Fixed Frame for Ijiraq".to_string(),
            PyFrame::IauSuttungr => "IAU Body-Fixed Frame for Suttungr".to_string(),
            PyFrame::IauKiviuq => "IAU Body-Fixed Frame for Kiviuq".to_string(),
            PyFrame::IauMundilfari => "IAU Body-Fixed Frame for Mundilfari".to_string(),
            PyFrame::IauAlbiorix => "IAU Body-Fixed Frame for Albiorix".to_string(),
            PyFrame::IauSkathi => "IAU Body-Fixed Frame for Skathi".to_string(),
            PyFrame::IauErriapus => "IAU Body-Fixed Frame for Erriapus".to_string(),
            PyFrame::IauSiarnaq => "IAU Body-Fixed Frame for Siarnaq".to_string(),
            PyFrame::IauThrymr => "IAU Body-Fixed Frame for Thrymr".to_string(),
            PyFrame::IauNarvi => "IAU Body-Fixed Frame for Narvi".to_string(),
            PyFrame::IauMethone => "IAU Body-Fixed Frame for Methone".to_string(),
            PyFrame::IauPallene => "IAU Body-Fixed Frame for Pallene".to_string(),
            PyFrame::IauPolydeuces => "IAU Body-Fixed Frame for Polydeuces".to_string(),
            PyFrame::IauDaphnis => "IAU Body-Fixed Frame for Daphnis".to_string(),
            PyFrame::IauAegir => "IAU Body-Fixed Frame for Aegir".to_string(),
            PyFrame::IauBebhionn => "IAU Body-Fixed Frame for Bebhionn".to_string(),
            PyFrame::IauBergelmir => "IAU Body-Fixed Frame for Bergelmir".to_string(),
            PyFrame::IauBestla => "IAU Body-Fixed Frame for Bestla".to_string(),
            PyFrame::IauFarbauti => "IAU Body-Fixed Frame for Farbauti".to_string(),
            PyFrame::IauFenrir => "IAU Body-Fixed Frame for Fenrir".to_string(),
            PyFrame::IauFornjot => "IAU Body-Fixed Frame for Fornjot".to_string(),
            PyFrame::IauHati => "IAU Body-Fixed Frame for Hati".to_string(),
            PyFrame::IauHyrrokkin => "IAU Body-Fixed Frame for Hyrrokkin".to_string(),
            PyFrame::IauKari => "IAU Body-Fixed Frame for Kari".to_string(),
            PyFrame::IauLoge => "IAU Body-Fixed Frame for Loge".to_string(),
            PyFrame::IauSkoll => "IAU Body-Fixed Frame for Skoll".to_string(),
            PyFrame::IauSurtur => "IAU Body-Fixed Frame for Surtur".to_string(),
            PyFrame::IauAnthe => "IAU Body-Fixed Frame for Anthe".to_string(),
            PyFrame::IauJarnsaxa => "IAU Body-Fixed Frame for Jarnsaxa".to_string(),
            PyFrame::IauGreip => "IAU Body-Fixed Frame for Greip".to_string(),
            PyFrame::IauTarqeq => "IAU Body-Fixed Frame for Tarqeq".to_string(),
            PyFrame::IauAegaeon => "IAU Body-Fixed Frame for Aegaeon".to_string(),
            PyFrame::IauAriel => "IAU Body-Fixed Frame for Ariel".to_string(),
            PyFrame::IauUmbriel => "IAU Body-Fixed Frame for Umbriel".to_string(),
            PyFrame::IauTitania => "IAU Body-Fixed Frame for Titania".to_string(),
            PyFrame::IauOberon => "IAU Body-Fixed Frame for Oberon".to_string(),
            PyFrame::IauMiranda => "IAU Body-Fixed Frame for Miranda".to_string(),
            PyFrame::IauCordelia => "IAU Body-Fixed Frame for Cordelia".to_string(),
            PyFrame::IauOphelia => "IAU Body-Fixed Frame for Ophelia".to_string(),
            PyFrame::IauBianca => "IAU Body-Fixed Frame for Bianca".to_string(),
            PyFrame::IauCressida => "IAU Body-Fixed Frame for Cressida".to_string(),
            PyFrame::IauDesdemona => "IAU Body-Fixed Frame for Desdemona".to_string(),
            PyFrame::IauJuliet => "IAU Body-Fixed Frame for Juliet".to_string(),
            PyFrame::IauPortia => "IAU Body-Fixed Frame for Portia".to_string(),
            PyFrame::IauRosalind => "IAU Body-Fixed Frame for Rosalind".to_string(),
            PyFrame::IauBelinda => "IAU Body-Fixed Frame for Belinda".to_string(),
            PyFrame::IauPuck => "IAU Body-Fixed Frame for Puck".to_string(),
            PyFrame::IauCaliban => "IAU Body-Fixed Frame for Caliban".to_string(),
            PyFrame::IauSycorax => "IAU Body-Fixed Frame for Sycorax".to_string(),
            PyFrame::IauProspero => "IAU Body-Fixed Frame for Prospero".to_string(),
            PyFrame::IauSetebos => "IAU Body-Fixed Frame for Setebos".to_string(),
            PyFrame::IauStephano => "IAU Body-Fixed Frame for Stephano".to_string(),
            PyFrame::IauTrinculo => "IAU Body-Fixed Frame for Trinculo".to_string(),
            PyFrame::IauFrancisco => "IAU Body-Fixed Frame for Francisco".to_string(),
            PyFrame::IauMargaret => "IAU Body-Fixed Frame for Margaret".to_string(),
            PyFrame::IauFerdinand => "IAU Body-Fixed Frame for Ferdinand".to_string(),
            PyFrame::IauPerdita => "IAU Body-Fixed Frame for Perdita".to_string(),
            PyFrame::IauMab => "IAU Body-Fixed Frame for Mab".to_string(),
            PyFrame::IauCupid => "IAU Body-Fixed Frame for Cupid".to_string(),
            PyFrame::IauTriton => "IAU Body-Fixed Frame for Triton".to_string(),
            PyFrame::IauNereid => "IAU Body-Fixed Frame for Nereid".to_string(),
            PyFrame::IauNaiad => "IAU Body-Fixed Frame for Naiad".to_string(),
            PyFrame::IauThalassa => "IAU Body-Fixed Frame for Thalassa".to_string(),
            PyFrame::IauDespina => "IAU Body-Fixed Frame for Despina".to_string(),
            PyFrame::IauGalatea => "IAU Body-Fixed Frame for Galatea".to_string(),
            PyFrame::IauLarissa => "IAU Body-Fixed Frame for Larissa".to_string(),
            PyFrame::IauProteus => "IAU Body-Fixed Frame for Proteus".to_string(),
            PyFrame::IauHalimede => "IAU Body-Fixed Frame for Halimede".to_string(),
            PyFrame::IauPsamathe => "IAU Body-Fixed Frame for Psamathe".to_string(),
            PyFrame::IauSao => "IAU Body-Fixed Frame for Sao".to_string(),
            PyFrame::IauLaomedeia => "IAU Body-Fixed Frame for Laomedeia".to_string(),
            PyFrame::IauNeso => "IAU Body-Fixed Frame for Neso".to_string(),
            PyFrame::IauCharon => "IAU Body-Fixed Frame for Charon".to_string(),
            PyFrame::IauNix => "IAU Body-Fixed Frame for Nix".to_string(),
            PyFrame::IauHydra => "IAU Body-Fixed Frame for Hydra".to_string(),
            PyFrame::IauKerberos => "IAU Body-Fixed Frame for Kerberos".to_string(),
            PyFrame::IauStyx => "IAU Body-Fixed Frame for Styx".to_string(),
            PyFrame::IauGaspra => "IAU Body-Fixed Frame for Gaspra".to_string(),
            PyFrame::IauIda => "IAU Body-Fixed Frame for Ida".to_string(),
            PyFrame::IauDactyl => "IAU Body-Fixed Frame for Dactyl".to_string(),
            PyFrame::IauCeres => "IAU Body-Fixed Frame for Ceres".to_string(),
            PyFrame::IauPallas => "IAU Body-Fixed Frame for Pallas".to_string(),
            PyFrame::IauVesta => "IAU Body-Fixed Frame for Vesta".to_string(),
            PyFrame::IauPsyche => "IAU Body-Fixed Frame for Psyche".to_string(),
            PyFrame::IauLutetia => "IAU Body-Fixed Frame for Lutetia".to_string(),
            PyFrame::IauKleopatra => "IAU Body-Fixed Frame for Kleopatra".to_string(),
            PyFrame::IauEros => "IAU Body-Fixed Frame for Eros".to_string(),
            PyFrame::IauDavida => "IAU Body-Fixed Frame for Davida".to_string(),
            PyFrame::IauMathilde => "IAU Body-Fixed Frame for Mathilde".to_string(),
            PyFrame::IauSteins => "IAU Body-Fixed Frame for Steins".to_string(),
            PyFrame::IauBraille => "IAU Body-Fixed Frame for Braille".to_string(),
            PyFrame::IauWilsonHarrington => {
                "IAU Body-Fixed Frame for Wilson-Harrington".to_string()
            }
            PyFrame::IauToutatis => "IAU Body-Fixed Frame for Toutatis".to_string(),
            PyFrame::IauItokawa => "IAU Body-Fixed Frame for Itokawa".to_string(),
            PyFrame::IauBennu => "IAU Body-Fixed Frame for Bennu".to_string(),
        }
    }
    fn abbreviation(&self) -> String {
        match self {
            PyFrame::Icrf => "ICRF".to_string(),
            PyFrame::IauSun => "IAU_SUN".to_string(),
            PyFrame::IauMercury => "IAU_MERCURY".to_string(),
            PyFrame::IauVenus => "IAU_VENUS".to_string(),
            PyFrame::IauEarth => "IAU_EARTH".to_string(),
            PyFrame::IauMars => "IAU_MARS".to_string(),
            PyFrame::IauJupiter => "IAU_JUPITER".to_string(),
            PyFrame::IauSaturn => "IAU_SATURN".to_string(),
            PyFrame::IauUranus => "IAU_URANUS".to_string(),
            PyFrame::IauNeptune => "IAU_NEPTUNE".to_string(),
            PyFrame::IauPluto => "IAU_PLUTO".to_string(),
            PyFrame::IauMoon => "IAU_MOON".to_string(),
            PyFrame::IauPhobos => "IAU_PHOBOS".to_string(),
            PyFrame::IauDeimos => "IAU_DEIMOS".to_string(),
            PyFrame::IauIo => "IAU_IO".to_string(),
            PyFrame::IauEuropa => "IAU_EUROPA".to_string(),
            PyFrame::IauGanymede => "IAU_GANYMEDE".to_string(),
            PyFrame::IauCallisto => "IAU_CALLISTO".to_string(),
            PyFrame::IauAmalthea => "IAU_AMALTHEA".to_string(),
            PyFrame::IauHimalia => "IAU_HIMALIA".to_string(),
            PyFrame::IauElara => "IAU_ELARA".to_string(),
            PyFrame::IauPasiphae => "IAU_PASIPHAE".to_string(),
            PyFrame::IauSinope => "IAU_SINOPE".to_string(),
            PyFrame::IauLysithea => "IAU_LYSITHEA".to_string(),
            PyFrame::IauCarme => "IAU_CARME".to_string(),
            PyFrame::IauAnanke => "IAU_ANANKE".to_string(),
            PyFrame::IauLeda => "IAU_LEDA".to_string(),
            PyFrame::IauThebe => "IAU_THEBE".to_string(),
            PyFrame::IauAdrastea => "IAU_ADRASTEA".to_string(),
            PyFrame::IauMetis => "IAU_METIS".to_string(),
            PyFrame::IauCallirrhoe => "IAU_CALLIRRHOE".to_string(),
            PyFrame::IauThemisto => "IAU_THEMISTO".to_string(),
            PyFrame::IauMagaclite => "IAU_MAGACLITE".to_string(),
            PyFrame::IauTaygete => "IAU_TAYGETE".to_string(),
            PyFrame::IauChaldene => "IAU_CHALDENE".to_string(),
            PyFrame::IauHarpalyke => "IAU_HARPALYKE".to_string(),
            PyFrame::IauKalyke => "IAU_KALYKE".to_string(),
            PyFrame::IauIocaste => "IAU_IOCASTE".to_string(),
            PyFrame::IauErinome => "IAU_ERINOME".to_string(),
            PyFrame::IauIsonoe => "IAU_ISONOE".to_string(),
            PyFrame::IauPraxidike => "IAU_PRAXIDIKE".to_string(),
            PyFrame::IauAutonoe => "IAU_AUTONOE".to_string(),
            PyFrame::IauThyone => "IAU_THYONE".to_string(),
            PyFrame::IauHermippe => "IAU_HERMIPPE".to_string(),
            PyFrame::IauAitne => "IAU_AITNE".to_string(),
            PyFrame::IauEurydome => "IAU_EURYDOME".to_string(),
            PyFrame::IauEuanthe => "IAU_EUANTHE".to_string(),
            PyFrame::IauEuporie => "IAU_EUPORIE".to_string(),
            PyFrame::IauOrthosie => "IAU_ORTHOSIE".to_string(),
            PyFrame::IauSponde => "IAU_SPONDE".to_string(),
            PyFrame::IauKale => "IAU_KALE".to_string(),
            PyFrame::IauPasithee => "IAU_PASITHEE".to_string(),
            PyFrame::IauHegemone => "IAU_HEGEMONE".to_string(),
            PyFrame::IauMneme => "IAU_MNEME".to_string(),
            PyFrame::IauAoede => "IAU_AOEDE".to_string(),
            PyFrame::IauThelxinoe => "IAU_THELXINOE".to_string(),
            PyFrame::IauArche => "IAU_ARCHE".to_string(),
            PyFrame::IauKallichore => "IAU_KALLICHORE".to_string(),
            PyFrame::IauHelike => "IAU_HELIKE".to_string(),
            PyFrame::IauCarpo => "IAU_CARPO".to_string(),
            PyFrame::IauEukelade => "IAU_EUKELADE".to_string(),
            PyFrame::IauCyllene => "IAU_CYLLENE".to_string(),
            PyFrame::IauKore => "IAU_KORE".to_string(),
            PyFrame::IauHerse => "IAU_HERSE".to_string(),
            PyFrame::IauDia => "IAU_DIA".to_string(),
            PyFrame::IauMimas => "IAU_MIMAS".to_string(),
            PyFrame::IauEnceladus => "IAU_ENCELADUS".to_string(),
            PyFrame::IauTethys => "IAU_TETHYS".to_string(),
            PyFrame::IauDione => "IAU_DIONE".to_string(),
            PyFrame::IauRhea => "IAU_RHEA".to_string(),
            PyFrame::IauTitan => "IAU_TITAN".to_string(),
            PyFrame::IauHyperion => "IAU_HYPERION".to_string(),
            PyFrame::IauIapetus => "IAU_IAPETUS".to_string(),
            PyFrame::IauPhoebe => "IAU_PHOEBE".to_string(),
            PyFrame::IauJanus => "IAU_JANUS".to_string(),
            PyFrame::IauEpimetheus => "IAU_EPIMETHEUS".to_string(),
            PyFrame::IauHelene => "IAU_HELENE".to_string(),
            PyFrame::IauTelesto => "IAU_TELESTO".to_string(),
            PyFrame::IauCalypso => "IAU_CALYPSO".to_string(),
            PyFrame::IauAtlas => "IAU_ATLAS".to_string(),
            PyFrame::IauPrometheus => "IAU_PROMETHEUS".to_string(),
            PyFrame::IauPandora => "IAU_PANDORA".to_string(),
            PyFrame::IauPan => "IAU_PAN".to_string(),
            PyFrame::IauYmir => "IAU_YMIR".to_string(),
            PyFrame::IauPaaliaq => "IAU_PAALIAQ".to_string(),
            PyFrame::IauTarvos => "IAU_TARVOS".to_string(),
            PyFrame::IauIjiraq => "IAU_IJIRAQ".to_string(),
            PyFrame::IauSuttungr => "IAU_SUTTUNGR".to_string(),
            PyFrame::IauKiviuq => "IAU_KIVIUQ".to_string(),
            PyFrame::IauMundilfari => "IAU_MUNDILFARI".to_string(),
            PyFrame::IauAlbiorix => "IAU_ALBIORIX".to_string(),
            PyFrame::IauSkathi => "IAU_SKATHI".to_string(),
            PyFrame::IauErriapus => "IAU_ERRIAPUS".to_string(),
            PyFrame::IauSiarnaq => "IAU_SIARNAQ".to_string(),
            PyFrame::IauThrymr => "IAU_THRYMR".to_string(),
            PyFrame::IauNarvi => "IAU_NARVI".to_string(),
            PyFrame::IauMethone => "IAU_METHONE".to_string(),
            PyFrame::IauPallene => "IAU_PALLENE".to_string(),
            PyFrame::IauPolydeuces => "IAU_POLYDEUCES".to_string(),
            PyFrame::IauDaphnis => "IAU_DAPHNIS".to_string(),
            PyFrame::IauAegir => "IAU_AEGIR".to_string(),
            PyFrame::IauBebhionn => "IAU_BEBHIONN".to_string(),
            PyFrame::IauBergelmir => "IAU_BERGELMIR".to_string(),
            PyFrame::IauBestla => "IAU_BESTLA".to_string(),
            PyFrame::IauFarbauti => "IAU_FARBAUTI".to_string(),
            PyFrame::IauFenrir => "IAU_FENRIR".to_string(),
            PyFrame::IauFornjot => "IAU_FORNJOT".to_string(),
            PyFrame::IauHati => "IAU_HATI".to_string(),
            PyFrame::IauHyrrokkin => "IAU_HYRROKKIN".to_string(),
            PyFrame::IauKari => "IAU_KARI".to_string(),
            PyFrame::IauLoge => "IAU_LOGE".to_string(),
            PyFrame::IauSkoll => "IAU_SKOLL".to_string(),
            PyFrame::IauSurtur => "IAU_SURTUR".to_string(),
            PyFrame::IauAnthe => "IAU_ANTHE".to_string(),
            PyFrame::IauJarnsaxa => "IAU_JARNSAXA".to_string(),
            PyFrame::IauGreip => "IAU_GREIP".to_string(),
            PyFrame::IauTarqeq => "IAU_TARQEQ".to_string(),
            PyFrame::IauAegaeon => "IAU_AEGAEON".to_string(),
            PyFrame::IauAriel => "IAU_ARIEL".to_string(),
            PyFrame::IauUmbriel => "IAU_UMBRIEL".to_string(),
            PyFrame::IauTitania => "IAU_TITANIA".to_string(),
            PyFrame::IauOberon => "IAU_OBERON".to_string(),
            PyFrame::IauMiranda => "IAU_MIRANDA".to_string(),
            PyFrame::IauCordelia => "IAU_CORDELIA".to_string(),
            PyFrame::IauOphelia => "IAU_OPHELIA".to_string(),
            PyFrame::IauBianca => "IAU_BIANCA".to_string(),
            PyFrame::IauCressida => "IAU_CRESSIDA".to_string(),
            PyFrame::IauDesdemona => "IAU_DESDEMONA".to_string(),
            PyFrame::IauJuliet => "IAU_JULIET".to_string(),
            PyFrame::IauPortia => "IAU_PORTIA".to_string(),
            PyFrame::IauRosalind => "IAU_ROSALIND".to_string(),
            PyFrame::IauBelinda => "IAU_BELINDA".to_string(),
            PyFrame::IauPuck => "IAU_PUCK".to_string(),
            PyFrame::IauCaliban => "IAU_CALIBAN".to_string(),
            PyFrame::IauSycorax => "IAU_SYCORAX".to_string(),
            PyFrame::IauProspero => "IAU_PROSPERO".to_string(),
            PyFrame::IauSetebos => "IAU_SETEBOS".to_string(),
            PyFrame::IauStephano => "IAU_STEPHANO".to_string(),
            PyFrame::IauTrinculo => "IAU_TRINCULO".to_string(),
            PyFrame::IauFrancisco => "IAU_FRANCISCO".to_string(),
            PyFrame::IauMargaret => "IAU_MARGARET".to_string(),
            PyFrame::IauFerdinand => "IAU_FERDINAND".to_string(),
            PyFrame::IauPerdita => "IAU_PERDITA".to_string(),
            PyFrame::IauMab => "IAU_MAB".to_string(),
            PyFrame::IauCupid => "IAU_CUPID".to_string(),
            PyFrame::IauTriton => "IAU_TRITON".to_string(),
            PyFrame::IauNereid => "IAU_NEREID".to_string(),
            PyFrame::IauNaiad => "IAU_NAIAD".to_string(),
            PyFrame::IauThalassa => "IAU_THALASSA".to_string(),
            PyFrame::IauDespina => "IAU_DESPINA".to_string(),
            PyFrame::IauGalatea => "IAU_GALATEA".to_string(),
            PyFrame::IauLarissa => "IAU_LARISSA".to_string(),
            PyFrame::IauProteus => "IAU_PROTEUS".to_string(),
            PyFrame::IauHalimede => "IAU_HALIMEDE".to_string(),
            PyFrame::IauPsamathe => "IAU_PSAMATHE".to_string(),
            PyFrame::IauSao => "IAU_SAO".to_string(),
            PyFrame::IauLaomedeia => "IAU_LAOMEDEIA".to_string(),
            PyFrame::IauNeso => "IAU_NESO".to_string(),
            PyFrame::IauCharon => "IAU_CHARON".to_string(),
            PyFrame::IauNix => "IAU_NIX".to_string(),
            PyFrame::IauHydra => "IAU_HYDRA".to_string(),
            PyFrame::IauKerberos => "IAU_KERBEROS".to_string(),
            PyFrame::IauStyx => "IAU_STYX".to_string(),
            PyFrame::IauGaspra => "IAU_GASPRA".to_string(),
            PyFrame::IauIda => "IAU_IDA".to_string(),
            PyFrame::IauDactyl => "IAU_DACTYL".to_string(),
            PyFrame::IauCeres => "IAU_CERES".to_string(),
            PyFrame::IauPallas => "IAU_PALLAS".to_string(),
            PyFrame::IauVesta => "IAU_VESTA".to_string(),
            PyFrame::IauPsyche => "IAU_PSYCHE".to_string(),
            PyFrame::IauLutetia => "IAU_LUTETIA".to_string(),
            PyFrame::IauKleopatra => "IAU_KLEOPATRA".to_string(),
            PyFrame::IauEros => "IAU_EROS".to_string(),
            PyFrame::IauDavida => "IAU_DAVIDA".to_string(),
            PyFrame::IauMathilde => "IAU_MATHILDE".to_string(),
            PyFrame::IauSteins => "IAU_STEINS".to_string(),
            PyFrame::IauBraille => "IAU_BRAILLE".to_string(),
            PyFrame::IauWilsonHarrington => "IAU_WILSON_HARRINGTON".to_string(),
            PyFrame::IauToutatis => "IAU_TOUTATIS".to_string(),
            PyFrame::IauItokawa => "IAU_ITOKAWA".to_string(),
            PyFrame::IauBennu => "IAU_BENNU".to_string(),
        }
    }
}
#[cfg(test)]
#[allow(clippy::approx_constant)]
mod tests {
    use super::*;
    #[test]
    fn test_reference_frame_icrf() {
        assert_eq!(
            PyFrame::Icrf.name(),
            "International Celestial Reference Frame"
        );
        assert_eq!(PyFrame::Icrf.abbreviation(), "ICRF");
    }
    #[test]
    fn test_reference_frame_iau_sun() {
        assert_eq!(PyFrame::IauSun.name(), "IAU Body-Fixed Frame for the Sun");
        assert_eq!(PyFrame::IauSun.abbreviation(), "IAU_SUN");
    }
    #[test]
    fn test_reference_frame_iau_mercury() {
        assert_eq!(
            PyFrame::IauMercury.name(),
            "IAU Body-Fixed Frame for Mercury"
        );
        assert_eq!(PyFrame::IauMercury.abbreviation(), "IAU_MERCURY");
    }
    #[test]
    fn test_reference_frame_iau_venus() {
        assert_eq!(PyFrame::IauVenus.name(), "IAU Body-Fixed Frame for Venus");
        assert_eq!(PyFrame::IauVenus.abbreviation(), "IAU_VENUS");
    }
    #[test]
    fn test_reference_frame_iau_earth() {
        assert_eq!(PyFrame::IauEarth.name(), "IAU Body-Fixed Frame for Earth");
        assert_eq!(PyFrame::IauEarth.abbreviation(), "IAU_EARTH");
    }
    #[test]
    fn test_reference_frame_iau_mars() {
        assert_eq!(PyFrame::IauMars.name(), "IAU Body-Fixed Frame for Mars");
        assert_eq!(PyFrame::IauMars.abbreviation(), "IAU_MARS");
    }
    #[test]
    fn test_reference_frame_iau_jupiter() {
        assert_eq!(
            PyFrame::IauJupiter.name(),
            "IAU Body-Fixed Frame for Jupiter"
        );
        assert_eq!(PyFrame::IauJupiter.abbreviation(), "IAU_JUPITER");
    }
    #[test]
    fn test_reference_frame_iau_saturn() {
        assert_eq!(PyFrame::IauSaturn.name(), "IAU Body-Fixed Frame for Saturn");
        assert_eq!(PyFrame::IauSaturn.abbreviation(), "IAU_SATURN");
    }
    #[test]
    fn test_reference_frame_iau_uranus() {
        assert_eq!(PyFrame::IauUranus.name(), "IAU Body-Fixed Frame for Uranus");
        assert_eq!(PyFrame::IauUranus.abbreviation(), "IAU_URANUS");
    }
    #[test]
    fn test_reference_frame_iau_neptune() {
        assert_eq!(
            PyFrame::IauNeptune.name(),
            "IAU Body-Fixed Frame for Neptune"
        );
        assert_eq!(PyFrame::IauNeptune.abbreviation(), "IAU_NEPTUNE");
    }
    #[test]
    fn test_reference_frame_iau_pluto() {
        assert_eq!(PyFrame::IauPluto.name(), "IAU Body-Fixed Frame for Pluto");
        assert_eq!(PyFrame::IauPluto.abbreviation(), "IAU_PLUTO");
    }
    #[test]
    fn test_reference_frame_iau_moon() {
        assert_eq!(PyFrame::IauMoon.name(), "IAU Body-Fixed Frame for the Moon");
        assert_eq!(PyFrame::IauMoon.abbreviation(), "IAU_MOON");
    }
    #[test]
    fn test_reference_frame_iau_phobos() {
        assert_eq!(PyFrame::IauPhobos.name(), "IAU Body-Fixed Frame for Phobos");
        assert_eq!(PyFrame::IauPhobos.abbreviation(), "IAU_PHOBOS");
    }
    #[test]
    fn test_reference_frame_iau_deimos() {
        assert_eq!(PyFrame::IauDeimos.name(), "IAU Body-Fixed Frame for Deimos");
        assert_eq!(PyFrame::IauDeimos.abbreviation(), "IAU_DEIMOS");
    }
    #[test]
    fn test_reference_frame_iau_io() {
        assert_eq!(PyFrame::IauIo.name(), "IAU Body-Fixed Frame for Io");
        assert_eq!(PyFrame::IauIo.abbreviation(), "IAU_IO");
    }
    #[test]
    fn test_reference_frame_iau_europa() {
        assert_eq!(PyFrame::IauEuropa.name(), "IAU Body-Fixed Frame for Europa");
        assert_eq!(PyFrame::IauEuropa.abbreviation(), "IAU_EUROPA");
    }
    #[test]
    fn test_reference_frame_iau_ganymede() {
        assert_eq!(
            PyFrame::IauGanymede.name(),
            "IAU Body-Fixed Frame for Ganymede"
        );
        assert_eq!(PyFrame::IauGanymede.abbreviation(), "IAU_GANYMEDE");
    }
    #[test]
    fn test_reference_frame_iau_callisto() {
        assert_eq!(
            PyFrame::IauCallisto.name(),
            "IAU Body-Fixed Frame for Callisto"
        );
        assert_eq!(PyFrame::IauCallisto.abbreviation(), "IAU_CALLISTO");
    }
    #[test]
    fn test_reference_frame_iau_amalthea() {
        assert_eq!(
            PyFrame::IauAmalthea.name(),
            "IAU Body-Fixed Frame for Amalthea"
        );
        assert_eq!(PyFrame::IauAmalthea.abbreviation(), "IAU_AMALTHEA");
    }
    #[test]
    fn test_reference_frame_iau_himalia() {
        assert_eq!(
            PyFrame::IauHimalia.name(),
            "IAU Body-Fixed Frame for Himalia"
        );
        assert_eq!(PyFrame::IauHimalia.abbreviation(), "IAU_HIMALIA");
    }
    #[test]
    fn test_reference_frame_iau_elara() {
        assert_eq!(PyFrame::IauElara.name(), "IAU Body-Fixed Frame for Elara");
        assert_eq!(PyFrame::IauElara.abbreviation(), "IAU_ELARA");
    }
    #[test]
    fn test_reference_frame_iau_pasiphae() {
        assert_eq!(
            PyFrame::IauPasiphae.name(),
            "IAU Body-Fixed Frame for Pasiphae"
        );
        assert_eq!(PyFrame::IauPasiphae.abbreviation(), "IAU_PASIPHAE");
    }
    #[test]
    fn test_reference_frame_iau_sinope() {
        assert_eq!(PyFrame::IauSinope.name(), "IAU Body-Fixed Frame for Sinope");
        assert_eq!(PyFrame::IauSinope.abbreviation(), "IAU_SINOPE");
    }
    #[test]
    fn test_reference_frame_iau_lysithea() {
        assert_eq!(
            PyFrame::IauLysithea.name(),
            "IAU Body-Fixed Frame for Lysithea"
        );
        assert_eq!(PyFrame::IauLysithea.abbreviation(), "IAU_LYSITHEA");
    }
    #[test]
    fn test_reference_frame_iau_carme() {
        assert_eq!(PyFrame::IauCarme.name(), "IAU Body-Fixed Frame for Carme");
        assert_eq!(PyFrame::IauCarme.abbreviation(), "IAU_CARME");
    }
    #[test]
    fn test_reference_frame_iau_ananke() {
        assert_eq!(PyFrame::IauAnanke.name(), "IAU Body-Fixed Frame for Ananke");
        assert_eq!(PyFrame::IauAnanke.abbreviation(), "IAU_ANANKE");
    }
    #[test]
    fn test_reference_frame_iau_leda() {
        assert_eq!(PyFrame::IauLeda.name(), "IAU Body-Fixed Frame for Leda");
        assert_eq!(PyFrame::IauLeda.abbreviation(), "IAU_LEDA");
    }
    #[test]
    fn test_reference_frame_iau_thebe() {
        assert_eq!(PyFrame::IauThebe.name(), "IAU Body-Fixed Frame for Thebe");
        assert_eq!(PyFrame::IauThebe.abbreviation(), "IAU_THEBE");
    }
    #[test]
    fn test_reference_frame_iau_adrastea() {
        assert_eq!(
            PyFrame::IauAdrastea.name(),
            "IAU Body-Fixed Frame for Adrastea"
        );
        assert_eq!(PyFrame::IauAdrastea.abbreviation(), "IAU_ADRASTEA");
    }
    #[test]
    fn test_reference_frame_iau_metis() {
        assert_eq!(PyFrame::IauMetis.name(), "IAU Body-Fixed Frame for Metis");
        assert_eq!(PyFrame::IauMetis.abbreviation(), "IAU_METIS");
    }
    #[test]
    fn test_reference_frame_iau_callirrhoe() {
        assert_eq!(
            PyFrame::IauCallirrhoe.name(),
            "IAU Body-Fixed Frame for Callirrhoe"
        );
        assert_eq!(PyFrame::IauCallirrhoe.abbreviation(), "IAU_CALLIRRHOE");
    }
    #[test]
    fn test_reference_frame_iau_themisto() {
        assert_eq!(
            PyFrame::IauThemisto.name(),
            "IAU Body-Fixed Frame for Themisto"
        );
        assert_eq!(PyFrame::IauThemisto.abbreviation(), "IAU_THEMISTO");
    }
    #[test]
    fn test_reference_frame_iau_magaclite() {
        assert_eq!(
            PyFrame::IauMagaclite.name(),
            "IAU Body-Fixed Frame for Magaclite"
        );
        assert_eq!(PyFrame::IauMagaclite.abbreviation(), "IAU_MAGACLITE");
    }
    #[test]
    fn test_reference_frame_iau_taygete() {
        assert_eq!(
            PyFrame::IauTaygete.name(),
            "IAU Body-Fixed Frame for Taygete"
        );
        assert_eq!(PyFrame::IauTaygete.abbreviation(), "IAU_TAYGETE");
    }
    #[test]
    fn test_reference_frame_iau_chaldene() {
        assert_eq!(
            PyFrame::IauChaldene.name(),
            "IAU Body-Fixed Frame for Chaldene"
        );
        assert_eq!(PyFrame::IauChaldene.abbreviation(), "IAU_CHALDENE");
    }
    #[test]
    fn test_reference_frame_iau_harpalyke() {
        assert_eq!(
            PyFrame::IauHarpalyke.name(),
            "IAU Body-Fixed Frame for Harpalyke"
        );
        assert_eq!(PyFrame::IauHarpalyke.abbreviation(), "IAU_HARPALYKE");
    }
    #[test]
    fn test_reference_frame_iau_kalyke() {
        assert_eq!(PyFrame::IauKalyke.name(), "IAU Body-Fixed Frame for Kalyke");
        assert_eq!(PyFrame::IauKalyke.abbreviation(), "IAU_KALYKE");
    }
    #[test]
    fn test_reference_frame_iau_iocaste() {
        assert_eq!(
            PyFrame::IauIocaste.name(),
            "IAU Body-Fixed Frame for Iocaste"
        );
        assert_eq!(PyFrame::IauIocaste.abbreviation(), "IAU_IOCASTE");
    }
    #[test]
    fn test_reference_frame_iau_erinome() {
        assert_eq!(
            PyFrame::IauErinome.name(),
            "IAU Body-Fixed Frame for Erinome"
        );
        assert_eq!(PyFrame::IauErinome.abbreviation(), "IAU_ERINOME");
    }
    #[test]
    fn test_reference_frame_iau_isonoe() {
        assert_eq!(PyFrame::IauIsonoe.name(), "IAU Body-Fixed Frame for Isonoe");
        assert_eq!(PyFrame::IauIsonoe.abbreviation(), "IAU_ISONOE");
    }
    #[test]
    fn test_reference_frame_iau_praxidike() {
        assert_eq!(
            PyFrame::IauPraxidike.name(),
            "IAU Body-Fixed Frame for Praxidike"
        );
        assert_eq!(PyFrame::IauPraxidike.abbreviation(), "IAU_PRAXIDIKE");
    }
    #[test]
    fn test_reference_frame_iau_autonoe() {
        assert_eq!(
            PyFrame::IauAutonoe.name(),
            "IAU Body-Fixed Frame for Autonoe"
        );
        assert_eq!(PyFrame::IauAutonoe.abbreviation(), "IAU_AUTONOE");
    }
    #[test]
    fn test_reference_frame_iau_thyone() {
        assert_eq!(PyFrame::IauThyone.name(), "IAU Body-Fixed Frame for Thyone");
        assert_eq!(PyFrame::IauThyone.abbreviation(), "IAU_THYONE");
    }
    #[test]
    fn test_reference_frame_iau_hermippe() {
        assert_eq!(
            PyFrame::IauHermippe.name(),
            "IAU Body-Fixed Frame for Hermippe"
        );
        assert_eq!(PyFrame::IauHermippe.abbreviation(), "IAU_HERMIPPE");
    }
    #[test]
    fn test_reference_frame_iau_aitne() {
        assert_eq!(PyFrame::IauAitne.name(), "IAU Body-Fixed Frame for Aitne");
        assert_eq!(PyFrame::IauAitne.abbreviation(), "IAU_AITNE");
    }
    #[test]
    fn test_reference_frame_iau_eurydome() {
        assert_eq!(
            PyFrame::IauEurydome.name(),
            "IAU Body-Fixed Frame for Eurydome"
        );
        assert_eq!(PyFrame::IauEurydome.abbreviation(), "IAU_EURYDOME");
    }
    #[test]
    fn test_reference_frame_iau_euanthe() {
        assert_eq!(
            PyFrame::IauEuanthe.name(),
            "IAU Body-Fixed Frame for Euanthe"
        );
        assert_eq!(PyFrame::IauEuanthe.abbreviation(), "IAU_EUANTHE");
    }
    #[test]
    fn test_reference_frame_iau_euporie() {
        assert_eq!(
            PyFrame::IauEuporie.name(),
            "IAU Body-Fixed Frame for Euporie"
        );
        assert_eq!(PyFrame::IauEuporie.abbreviation(), "IAU_EUPORIE");
    }
    #[test]
    fn test_reference_frame_iau_orthosie() {
        assert_eq!(
            PyFrame::IauOrthosie.name(),
            "IAU Body-Fixed Frame for Orthosie"
        );
        assert_eq!(PyFrame::IauOrthosie.abbreviation(), "IAU_ORTHOSIE");
    }
    #[test]
    fn test_reference_frame_iau_sponde() {
        assert_eq!(PyFrame::IauSponde.name(), "IAU Body-Fixed Frame for Sponde");
        assert_eq!(PyFrame::IauSponde.abbreviation(), "IAU_SPONDE");
    }
    #[test]
    fn test_reference_frame_iau_kale() {
        assert_eq!(PyFrame::IauKale.name(), "IAU Body-Fixed Frame for Kale");
        assert_eq!(PyFrame::IauKale.abbreviation(), "IAU_KALE");
    }
    #[test]
    fn test_reference_frame_iau_pasithee() {
        assert_eq!(
            PyFrame::IauPasithee.name(),
            "IAU Body-Fixed Frame for Pasithee"
        );
        assert_eq!(PyFrame::IauPasithee.abbreviation(), "IAU_PASITHEE");
    }
    #[test]
    fn test_reference_frame_iau_hegemone() {
        assert_eq!(
            PyFrame::IauHegemone.name(),
            "IAU Body-Fixed Frame for Hegemone"
        );
        assert_eq!(PyFrame::IauHegemone.abbreviation(), "IAU_HEGEMONE");
    }
    #[test]
    fn test_reference_frame_iau_mneme() {
        assert_eq!(PyFrame::IauMneme.name(), "IAU Body-Fixed Frame for Mneme");
        assert_eq!(PyFrame::IauMneme.abbreviation(), "IAU_MNEME");
    }
    #[test]
    fn test_reference_frame_iau_aoede() {
        assert_eq!(PyFrame::IauAoede.name(), "IAU Body-Fixed Frame for Aoede");
        assert_eq!(PyFrame::IauAoede.abbreviation(), "IAU_AOEDE");
    }
    #[test]
    fn test_reference_frame_iau_thelxinoe() {
        assert_eq!(
            PyFrame::IauThelxinoe.name(),
            "IAU Body-Fixed Frame for Thelxinoe"
        );
        assert_eq!(PyFrame::IauThelxinoe.abbreviation(), "IAU_THELXINOE");
    }
    #[test]
    fn test_reference_frame_iau_arche() {
        assert_eq!(PyFrame::IauArche.name(), "IAU Body-Fixed Frame for Arche");
        assert_eq!(PyFrame::IauArche.abbreviation(), "IAU_ARCHE");
    }
    #[test]
    fn test_reference_frame_iau_kallichore() {
        assert_eq!(
            PyFrame::IauKallichore.name(),
            "IAU Body-Fixed Frame for Kallichore"
        );
        assert_eq!(PyFrame::IauKallichore.abbreviation(), "IAU_KALLICHORE");
    }
    #[test]
    fn test_reference_frame_iau_helike() {
        assert_eq!(PyFrame::IauHelike.name(), "IAU Body-Fixed Frame for Helike");
        assert_eq!(PyFrame::IauHelike.abbreviation(), "IAU_HELIKE");
    }
    #[test]
    fn test_reference_frame_iau_carpo() {
        assert_eq!(PyFrame::IauCarpo.name(), "IAU Body-Fixed Frame for Carpo");
        assert_eq!(PyFrame::IauCarpo.abbreviation(), "IAU_CARPO");
    }
    #[test]
    fn test_reference_frame_iau_eukelade() {
        assert_eq!(
            PyFrame::IauEukelade.name(),
            "IAU Body-Fixed Frame for Eukelade"
        );
        assert_eq!(PyFrame::IauEukelade.abbreviation(), "IAU_EUKELADE");
    }
    #[test]
    fn test_reference_frame_iau_cyllene() {
        assert_eq!(
            PyFrame::IauCyllene.name(),
            "IAU Body-Fixed Frame for Cyllene"
        );
        assert_eq!(PyFrame::IauCyllene.abbreviation(), "IAU_CYLLENE");
    }
    #[test]
    fn test_reference_frame_iau_kore() {
        assert_eq!(PyFrame::IauKore.name(), "IAU Body-Fixed Frame for Kore");
        assert_eq!(PyFrame::IauKore.abbreviation(), "IAU_KORE");
    }
    #[test]
    fn test_reference_frame_iau_herse() {
        assert_eq!(PyFrame::IauHerse.name(), "IAU Body-Fixed Frame for Herse");
        assert_eq!(PyFrame::IauHerse.abbreviation(), "IAU_HERSE");
    }
    #[test]
    fn test_reference_frame_iau_dia() {
        assert_eq!(PyFrame::IauDia.name(), "IAU Body-Fixed Frame for Dia");
        assert_eq!(PyFrame::IauDia.abbreviation(), "IAU_DIA");
    }
    #[test]
    fn test_reference_frame_iau_mimas() {
        assert_eq!(PyFrame::IauMimas.name(), "IAU Body-Fixed Frame for Mimas");
        assert_eq!(PyFrame::IauMimas.abbreviation(), "IAU_MIMAS");
    }
    #[test]
    fn test_reference_frame_iau_enceladus() {
        assert_eq!(
            PyFrame::IauEnceladus.name(),
            "IAU Body-Fixed Frame for Enceladus"
        );
        assert_eq!(PyFrame::IauEnceladus.abbreviation(), "IAU_ENCELADUS");
    }
    #[test]
    fn test_reference_frame_iau_tethys() {
        assert_eq!(PyFrame::IauTethys.name(), "IAU Body-Fixed Frame for Tethys");
        assert_eq!(PyFrame::IauTethys.abbreviation(), "IAU_TETHYS");
    }
    #[test]
    fn test_reference_frame_iau_dione() {
        assert_eq!(PyFrame::IauDione.name(), "IAU Body-Fixed Frame for Dione");
        assert_eq!(PyFrame::IauDione.abbreviation(), "IAU_DIONE");
    }
    #[test]
    fn test_reference_frame_iau_rhea() {
        assert_eq!(PyFrame::IauRhea.name(), "IAU Body-Fixed Frame for Rhea");
        assert_eq!(PyFrame::IauRhea.abbreviation(), "IAU_RHEA");
    }
    #[test]
    fn test_reference_frame_iau_titan() {
        assert_eq!(PyFrame::IauTitan.name(), "IAU Body-Fixed Frame for Titan");
        assert_eq!(PyFrame::IauTitan.abbreviation(), "IAU_TITAN");
    }
    #[test]
    fn test_reference_frame_iau_hyperion() {
        assert_eq!(
            PyFrame::IauHyperion.name(),
            "IAU Body-Fixed Frame for Hyperion"
        );
        assert_eq!(PyFrame::IauHyperion.abbreviation(), "IAU_HYPERION");
    }
    #[test]
    fn test_reference_frame_iau_iapetus() {
        assert_eq!(
            PyFrame::IauIapetus.name(),
            "IAU Body-Fixed Frame for Iapetus"
        );
        assert_eq!(PyFrame::IauIapetus.abbreviation(), "IAU_IAPETUS");
    }
    #[test]
    fn test_reference_frame_iau_phoebe() {
        assert_eq!(PyFrame::IauPhoebe.name(), "IAU Body-Fixed Frame for Phoebe");
        assert_eq!(PyFrame::IauPhoebe.abbreviation(), "IAU_PHOEBE");
    }
    #[test]
    fn test_reference_frame_iau_janus() {
        assert_eq!(PyFrame::IauJanus.name(), "IAU Body-Fixed Frame for Janus");
        assert_eq!(PyFrame::IauJanus.abbreviation(), "IAU_JANUS");
    }
    #[test]
    fn test_reference_frame_iau_epimetheus() {
        assert_eq!(
            PyFrame::IauEpimetheus.name(),
            "IAU Body-Fixed Frame for Epimetheus"
        );
        assert_eq!(PyFrame::IauEpimetheus.abbreviation(), "IAU_EPIMETHEUS");
    }
    #[test]
    fn test_reference_frame_iau_helene() {
        assert_eq!(PyFrame::IauHelene.name(), "IAU Body-Fixed Frame for Helene");
        assert_eq!(PyFrame::IauHelene.abbreviation(), "IAU_HELENE");
    }
    #[test]
    fn test_reference_frame_iau_telesto() {
        assert_eq!(
            PyFrame::IauTelesto.name(),
            "IAU Body-Fixed Frame for Telesto"
        );
        assert_eq!(PyFrame::IauTelesto.abbreviation(), "IAU_TELESTO");
    }
    #[test]
    fn test_reference_frame_iau_calypso() {
        assert_eq!(
            PyFrame::IauCalypso.name(),
            "IAU Body-Fixed Frame for Calypso"
        );
        assert_eq!(PyFrame::IauCalypso.abbreviation(), "IAU_CALYPSO");
    }
    #[test]
    fn test_reference_frame_iau_atlas() {
        assert_eq!(PyFrame::IauAtlas.name(), "IAU Body-Fixed Frame for Atlas");
        assert_eq!(PyFrame::IauAtlas.abbreviation(), "IAU_ATLAS");
    }
    #[test]
    fn test_reference_frame_iau_prometheus() {
        assert_eq!(
            PyFrame::IauPrometheus.name(),
            "IAU Body-Fixed Frame for Prometheus"
        );
        assert_eq!(PyFrame::IauPrometheus.abbreviation(), "IAU_PROMETHEUS");
    }
    #[test]
    fn test_reference_frame_iau_pandora() {
        assert_eq!(
            PyFrame::IauPandora.name(),
            "IAU Body-Fixed Frame for Pandora"
        );
        assert_eq!(PyFrame::IauPandora.abbreviation(), "IAU_PANDORA");
    }
    #[test]
    fn test_reference_frame_iau_pan() {
        assert_eq!(PyFrame::IauPan.name(), "IAU Body-Fixed Frame for Pan");
        assert_eq!(PyFrame::IauPan.abbreviation(), "IAU_PAN");
    }
    #[test]
    fn test_reference_frame_iau_ymir() {
        assert_eq!(PyFrame::IauYmir.name(), "IAU Body-Fixed Frame for Ymir");
        assert_eq!(PyFrame::IauYmir.abbreviation(), "IAU_YMIR");
    }
    #[test]
    fn test_reference_frame_iau_paaliaq() {
        assert_eq!(
            PyFrame::IauPaaliaq.name(),
            "IAU Body-Fixed Frame for Paaliaq"
        );
        assert_eq!(PyFrame::IauPaaliaq.abbreviation(), "IAU_PAALIAQ");
    }
    #[test]
    fn test_reference_frame_iau_tarvos() {
        assert_eq!(PyFrame::IauTarvos.name(), "IAU Body-Fixed Frame for Tarvos");
        assert_eq!(PyFrame::IauTarvos.abbreviation(), "IAU_TARVOS");
    }
    #[test]
    fn test_reference_frame_iau_ijiraq() {
        assert_eq!(PyFrame::IauIjiraq.name(), "IAU Body-Fixed Frame for Ijiraq");
        assert_eq!(PyFrame::IauIjiraq.abbreviation(), "IAU_IJIRAQ");
    }
    #[test]
    fn test_reference_frame_iau_suttungr() {
        assert_eq!(
            PyFrame::IauSuttungr.name(),
            "IAU Body-Fixed Frame for Suttungr"
        );
        assert_eq!(PyFrame::IauSuttungr.abbreviation(), "IAU_SUTTUNGR");
    }
    #[test]
    fn test_reference_frame_iau_kiviuq() {
        assert_eq!(PyFrame::IauKiviuq.name(), "IAU Body-Fixed Frame for Kiviuq");
        assert_eq!(PyFrame::IauKiviuq.abbreviation(), "IAU_KIVIUQ");
    }
    #[test]
    fn test_reference_frame_iau_mundilfari() {
        assert_eq!(
            PyFrame::IauMundilfari.name(),
            "IAU Body-Fixed Frame for Mundilfari"
        );
        assert_eq!(PyFrame::IauMundilfari.abbreviation(), "IAU_MUNDILFARI");
    }
    #[test]
    fn test_reference_frame_iau_albiorix() {
        assert_eq!(
            PyFrame::IauAlbiorix.name(),
            "IAU Body-Fixed Frame for Albiorix"
        );
        assert_eq!(PyFrame::IauAlbiorix.abbreviation(), "IAU_ALBIORIX");
    }
    #[test]
    fn test_reference_frame_iau_skathi() {
        assert_eq!(PyFrame::IauSkathi.name(), "IAU Body-Fixed Frame for Skathi");
        assert_eq!(PyFrame::IauSkathi.abbreviation(), "IAU_SKATHI");
    }
    #[test]
    fn test_reference_frame_iau_erriapus() {
        assert_eq!(
            PyFrame::IauErriapus.name(),
            "IAU Body-Fixed Frame for Erriapus"
        );
        assert_eq!(PyFrame::IauErriapus.abbreviation(), "IAU_ERRIAPUS");
    }
    #[test]
    fn test_reference_frame_iau_siarnaq() {
        assert_eq!(
            PyFrame::IauSiarnaq.name(),
            "IAU Body-Fixed Frame for Siarnaq"
        );
        assert_eq!(PyFrame::IauSiarnaq.abbreviation(), "IAU_SIARNAQ");
    }
    #[test]
    fn test_reference_frame_iau_thrymr() {
        assert_eq!(PyFrame::IauThrymr.name(), "IAU Body-Fixed Frame for Thrymr");
        assert_eq!(PyFrame::IauThrymr.abbreviation(), "IAU_THRYMR");
    }
    #[test]
    fn test_reference_frame_iau_narvi() {
        assert_eq!(PyFrame::IauNarvi.name(), "IAU Body-Fixed Frame for Narvi");
        assert_eq!(PyFrame::IauNarvi.abbreviation(), "IAU_NARVI");
    }
    #[test]
    fn test_reference_frame_iau_methone() {
        assert_eq!(
            PyFrame::IauMethone.name(),
            "IAU Body-Fixed Frame for Methone"
        );
        assert_eq!(PyFrame::IauMethone.abbreviation(), "IAU_METHONE");
    }
    #[test]
    fn test_reference_frame_iau_pallene() {
        assert_eq!(
            PyFrame::IauPallene.name(),
            "IAU Body-Fixed Frame for Pallene"
        );
        assert_eq!(PyFrame::IauPallene.abbreviation(), "IAU_PALLENE");
    }
    #[test]
    fn test_reference_frame_iau_polydeuces() {
        assert_eq!(
            PyFrame::IauPolydeuces.name(),
            "IAU Body-Fixed Frame for Polydeuces"
        );
        assert_eq!(PyFrame::IauPolydeuces.abbreviation(), "IAU_POLYDEUCES");
    }
    #[test]
    fn test_reference_frame_iau_daphnis() {
        assert_eq!(
            PyFrame::IauDaphnis.name(),
            "IAU Body-Fixed Frame for Daphnis"
        );
        assert_eq!(PyFrame::IauDaphnis.abbreviation(), "IAU_DAPHNIS");
    }
    #[test]
    fn test_reference_frame_iau_aegir() {
        assert_eq!(PyFrame::IauAegir.name(), "IAU Body-Fixed Frame for Aegir");
        assert_eq!(PyFrame::IauAegir.abbreviation(), "IAU_AEGIR");
    }
    #[test]
    fn test_reference_frame_iau_bebhionn() {
        assert_eq!(
            PyFrame::IauBebhionn.name(),
            "IAU Body-Fixed Frame for Bebhionn"
        );
        assert_eq!(PyFrame::IauBebhionn.abbreviation(), "IAU_BEBHIONN");
    }
    #[test]
    fn test_reference_frame_iau_bergelmir() {
        assert_eq!(
            PyFrame::IauBergelmir.name(),
            "IAU Body-Fixed Frame for Bergelmir"
        );
        assert_eq!(PyFrame::IauBergelmir.abbreviation(), "IAU_BERGELMIR");
    }
    #[test]
    fn test_reference_frame_iau_bestla() {
        assert_eq!(PyFrame::IauBestla.name(), "IAU Body-Fixed Frame for Bestla");
        assert_eq!(PyFrame::IauBestla.abbreviation(), "IAU_BESTLA");
    }
    #[test]
    fn test_reference_frame_iau_farbauti() {
        assert_eq!(
            PyFrame::IauFarbauti.name(),
            "IAU Body-Fixed Frame for Farbauti"
        );
        assert_eq!(PyFrame::IauFarbauti.abbreviation(), "IAU_FARBAUTI");
    }
    #[test]
    fn test_reference_frame_iau_fenrir() {
        assert_eq!(PyFrame::IauFenrir.name(), "IAU Body-Fixed Frame for Fenrir");
        assert_eq!(PyFrame::IauFenrir.abbreviation(), "IAU_FENRIR");
    }
    #[test]
    fn test_reference_frame_iau_fornjot() {
        assert_eq!(
            PyFrame::IauFornjot.name(),
            "IAU Body-Fixed Frame for Fornjot"
        );
        assert_eq!(PyFrame::IauFornjot.abbreviation(), "IAU_FORNJOT");
    }
    #[test]
    fn test_reference_frame_iau_hati() {
        assert_eq!(PyFrame::IauHati.name(), "IAU Body-Fixed Frame for Hati");
        assert_eq!(PyFrame::IauHati.abbreviation(), "IAU_HATI");
    }
    #[test]
    fn test_reference_frame_iau_hyrrokkin() {
        assert_eq!(
            PyFrame::IauHyrrokkin.name(),
            "IAU Body-Fixed Frame for Hyrrokkin"
        );
        assert_eq!(PyFrame::IauHyrrokkin.abbreviation(), "IAU_HYRROKKIN");
    }
    #[test]
    fn test_reference_frame_iau_kari() {
        assert_eq!(PyFrame::IauKari.name(), "IAU Body-Fixed Frame for Kari");
        assert_eq!(PyFrame::IauKari.abbreviation(), "IAU_KARI");
    }
    #[test]
    fn test_reference_frame_iau_loge() {
        assert_eq!(PyFrame::IauLoge.name(), "IAU Body-Fixed Frame for Loge");
        assert_eq!(PyFrame::IauLoge.abbreviation(), "IAU_LOGE");
    }
    #[test]
    fn test_reference_frame_iau_skoll() {
        assert_eq!(PyFrame::IauSkoll.name(), "IAU Body-Fixed Frame for Skoll");
        assert_eq!(PyFrame::IauSkoll.abbreviation(), "IAU_SKOLL");
    }
    #[test]
    fn test_reference_frame_iau_surtur() {
        assert_eq!(PyFrame::IauSurtur.name(), "IAU Body-Fixed Frame for Surtur");
        assert_eq!(PyFrame::IauSurtur.abbreviation(), "IAU_SURTUR");
    }
    #[test]
    fn test_reference_frame_iau_anthe() {
        assert_eq!(PyFrame::IauAnthe.name(), "IAU Body-Fixed Frame for Anthe");
        assert_eq!(PyFrame::IauAnthe.abbreviation(), "IAU_ANTHE");
    }
    #[test]
    fn test_reference_frame_iau_jarnsaxa() {
        assert_eq!(
            PyFrame::IauJarnsaxa.name(),
            "IAU Body-Fixed Frame for Jarnsaxa"
        );
        assert_eq!(PyFrame::IauJarnsaxa.abbreviation(), "IAU_JARNSAXA");
    }
    #[test]
    fn test_reference_frame_iau_greip() {
        assert_eq!(PyFrame::IauGreip.name(), "IAU Body-Fixed Frame for Greip");
        assert_eq!(PyFrame::IauGreip.abbreviation(), "IAU_GREIP");
    }
    #[test]
    fn test_reference_frame_iau_tarqeq() {
        assert_eq!(PyFrame::IauTarqeq.name(), "IAU Body-Fixed Frame for Tarqeq");
        assert_eq!(PyFrame::IauTarqeq.abbreviation(), "IAU_TARQEQ");
    }
    #[test]
    fn test_reference_frame_iau_aegaeon() {
        assert_eq!(
            PyFrame::IauAegaeon.name(),
            "IAU Body-Fixed Frame for Aegaeon"
        );
        assert_eq!(PyFrame::IauAegaeon.abbreviation(), "IAU_AEGAEON");
    }
    #[test]
    fn test_reference_frame_iau_ariel() {
        assert_eq!(PyFrame::IauAriel.name(), "IAU Body-Fixed Frame for Ariel");
        assert_eq!(PyFrame::IauAriel.abbreviation(), "IAU_ARIEL");
    }
    #[test]
    fn test_reference_frame_iau_umbriel() {
        assert_eq!(
            PyFrame::IauUmbriel.name(),
            "IAU Body-Fixed Frame for Umbriel"
        );
        assert_eq!(PyFrame::IauUmbriel.abbreviation(), "IAU_UMBRIEL");
    }
    #[test]
    fn test_reference_frame_iau_titania() {
        assert_eq!(
            PyFrame::IauTitania.name(),
            "IAU Body-Fixed Frame for Titania"
        );
        assert_eq!(PyFrame::IauTitania.abbreviation(), "IAU_TITANIA");
    }
    #[test]
    fn test_reference_frame_iau_oberon() {
        assert_eq!(PyFrame::IauOberon.name(), "IAU Body-Fixed Frame for Oberon");
        assert_eq!(PyFrame::IauOberon.abbreviation(), "IAU_OBERON");
    }
    #[test]
    fn test_reference_frame_iau_miranda() {
        assert_eq!(
            PyFrame::IauMiranda.name(),
            "IAU Body-Fixed Frame for Miranda"
        );
        assert_eq!(PyFrame::IauMiranda.abbreviation(), "IAU_MIRANDA");
    }
    #[test]
    fn test_reference_frame_iau_cordelia() {
        assert_eq!(
            PyFrame::IauCordelia.name(),
            "IAU Body-Fixed Frame for Cordelia"
        );
        assert_eq!(PyFrame::IauCordelia.abbreviation(), "IAU_CORDELIA");
    }
    #[test]
    fn test_reference_frame_iau_ophelia() {
        assert_eq!(
            PyFrame::IauOphelia.name(),
            "IAU Body-Fixed Frame for Ophelia"
        );
        assert_eq!(PyFrame::IauOphelia.abbreviation(), "IAU_OPHELIA");
    }
    #[test]
    fn test_reference_frame_iau_bianca() {
        assert_eq!(PyFrame::IauBianca.name(), "IAU Body-Fixed Frame for Bianca");
        assert_eq!(PyFrame::IauBianca.abbreviation(), "IAU_BIANCA");
    }
    #[test]
    fn test_reference_frame_iau_cressida() {
        assert_eq!(
            PyFrame::IauCressida.name(),
            "IAU Body-Fixed Frame for Cressida"
        );
        assert_eq!(PyFrame::IauCressida.abbreviation(), "IAU_CRESSIDA");
    }
    #[test]
    fn test_reference_frame_iau_desdemona() {
        assert_eq!(
            PyFrame::IauDesdemona.name(),
            "IAU Body-Fixed Frame for Desdemona"
        );
        assert_eq!(PyFrame::IauDesdemona.abbreviation(), "IAU_DESDEMONA");
    }
    #[test]
    fn test_reference_frame_iau_juliet() {
        assert_eq!(PyFrame::IauJuliet.name(), "IAU Body-Fixed Frame for Juliet");
        assert_eq!(PyFrame::IauJuliet.abbreviation(), "IAU_JULIET");
    }
    #[test]
    fn test_reference_frame_iau_portia() {
        assert_eq!(PyFrame::IauPortia.name(), "IAU Body-Fixed Frame for Portia");
        assert_eq!(PyFrame::IauPortia.abbreviation(), "IAU_PORTIA");
    }
    #[test]
    fn test_reference_frame_iau_rosalind() {
        assert_eq!(
            PyFrame::IauRosalind.name(),
            "IAU Body-Fixed Frame for Rosalind"
        );
        assert_eq!(PyFrame::IauRosalind.abbreviation(), "IAU_ROSALIND");
    }
    #[test]
    fn test_reference_frame_iau_belinda() {
        assert_eq!(
            PyFrame::IauBelinda.name(),
            "IAU Body-Fixed Frame for Belinda"
        );
        assert_eq!(PyFrame::IauBelinda.abbreviation(), "IAU_BELINDA");
    }
    #[test]
    fn test_reference_frame_iau_puck() {
        assert_eq!(PyFrame::IauPuck.name(), "IAU Body-Fixed Frame for Puck");
        assert_eq!(PyFrame::IauPuck.abbreviation(), "IAU_PUCK");
    }
    #[test]
    fn test_reference_frame_iau_caliban() {
        assert_eq!(
            PyFrame::IauCaliban.name(),
            "IAU Body-Fixed Frame for Caliban"
        );
        assert_eq!(PyFrame::IauCaliban.abbreviation(), "IAU_CALIBAN");
    }
    #[test]
    fn test_reference_frame_iau_sycorax() {
        assert_eq!(
            PyFrame::IauSycorax.name(),
            "IAU Body-Fixed Frame for Sycorax"
        );
        assert_eq!(PyFrame::IauSycorax.abbreviation(), "IAU_SYCORAX");
    }
    #[test]
    fn test_reference_frame_iau_prospero() {
        assert_eq!(
            PyFrame::IauProspero.name(),
            "IAU Body-Fixed Frame for Prospero"
        );
        assert_eq!(PyFrame::IauProspero.abbreviation(), "IAU_PROSPERO");
    }
    #[test]
    fn test_reference_frame_iau_setebos() {
        assert_eq!(
            PyFrame::IauSetebos.name(),
            "IAU Body-Fixed Frame for Setebos"
        );
        assert_eq!(PyFrame::IauSetebos.abbreviation(), "IAU_SETEBOS");
    }
    #[test]
    fn test_reference_frame_iau_stephano() {
        assert_eq!(
            PyFrame::IauStephano.name(),
            "IAU Body-Fixed Frame for Stephano"
        );
        assert_eq!(PyFrame::IauStephano.abbreviation(), "IAU_STEPHANO");
    }
    #[test]
    fn test_reference_frame_iau_trinculo() {
        assert_eq!(
            PyFrame::IauTrinculo.name(),
            "IAU Body-Fixed Frame for Trinculo"
        );
        assert_eq!(PyFrame::IauTrinculo.abbreviation(), "IAU_TRINCULO");
    }
    #[test]
    fn test_reference_frame_iau_francisco() {
        assert_eq!(
            PyFrame::IauFrancisco.name(),
            "IAU Body-Fixed Frame for Francisco"
        );
        assert_eq!(PyFrame::IauFrancisco.abbreviation(), "IAU_FRANCISCO");
    }
    #[test]
    fn test_reference_frame_iau_margaret() {
        assert_eq!(
            PyFrame::IauMargaret.name(),
            "IAU Body-Fixed Frame for Margaret"
        );
        assert_eq!(PyFrame::IauMargaret.abbreviation(), "IAU_MARGARET");
    }
    #[test]
    fn test_reference_frame_iau_ferdinand() {
        assert_eq!(
            PyFrame::IauFerdinand.name(),
            "IAU Body-Fixed Frame for Ferdinand"
        );
        assert_eq!(PyFrame::IauFerdinand.abbreviation(), "IAU_FERDINAND");
    }
    #[test]
    fn test_reference_frame_iau_perdita() {
        assert_eq!(
            PyFrame::IauPerdita.name(),
            "IAU Body-Fixed Frame for Perdita"
        );
        assert_eq!(PyFrame::IauPerdita.abbreviation(), "IAU_PERDITA");
    }
    #[test]
    fn test_reference_frame_iau_mab() {
        assert_eq!(PyFrame::IauMab.name(), "IAU Body-Fixed Frame for Mab");
        assert_eq!(PyFrame::IauMab.abbreviation(), "IAU_MAB");
    }
    #[test]
    fn test_reference_frame_iau_cupid() {
        assert_eq!(PyFrame::IauCupid.name(), "IAU Body-Fixed Frame for Cupid");
        assert_eq!(PyFrame::IauCupid.abbreviation(), "IAU_CUPID");
    }
    #[test]
    fn test_reference_frame_iau_triton() {
        assert_eq!(PyFrame::IauTriton.name(), "IAU Body-Fixed Frame for Triton");
        assert_eq!(PyFrame::IauTriton.abbreviation(), "IAU_TRITON");
    }
    #[test]
    fn test_reference_frame_iau_nereid() {
        assert_eq!(PyFrame::IauNereid.name(), "IAU Body-Fixed Frame for Nereid");
        assert_eq!(PyFrame::IauNereid.abbreviation(), "IAU_NEREID");
    }
    #[test]
    fn test_reference_frame_iau_naiad() {
        assert_eq!(PyFrame::IauNaiad.name(), "IAU Body-Fixed Frame for Naiad");
        assert_eq!(PyFrame::IauNaiad.abbreviation(), "IAU_NAIAD");
    }
    #[test]
    fn test_reference_frame_iau_thalassa() {
        assert_eq!(
            PyFrame::IauThalassa.name(),
            "IAU Body-Fixed Frame for Thalassa"
        );
        assert_eq!(PyFrame::IauThalassa.abbreviation(), "IAU_THALASSA");
    }
    #[test]
    fn test_reference_frame_iau_despina() {
        assert_eq!(
            PyFrame::IauDespina.name(),
            "IAU Body-Fixed Frame for Despina"
        );
        assert_eq!(PyFrame::IauDespina.abbreviation(), "IAU_DESPINA");
    }
    #[test]
    fn test_reference_frame_iau_galatea() {
        assert_eq!(
            PyFrame::IauGalatea.name(),
            "IAU Body-Fixed Frame for Galatea"
        );
        assert_eq!(PyFrame::IauGalatea.abbreviation(), "IAU_GALATEA");
    }
    #[test]
    fn test_reference_frame_iau_larissa() {
        assert_eq!(
            PyFrame::IauLarissa.name(),
            "IAU Body-Fixed Frame for Larissa"
        );
        assert_eq!(PyFrame::IauLarissa.abbreviation(), "IAU_LARISSA");
    }
    #[test]
    fn test_reference_frame_iau_proteus() {
        assert_eq!(
            PyFrame::IauProteus.name(),
            "IAU Body-Fixed Frame for Proteus"
        );
        assert_eq!(PyFrame::IauProteus.abbreviation(), "IAU_PROTEUS");
    }
    #[test]
    fn test_reference_frame_iau_halimede() {
        assert_eq!(
            PyFrame::IauHalimede.name(),
            "IAU Body-Fixed Frame for Halimede"
        );
        assert_eq!(PyFrame::IauHalimede.abbreviation(), "IAU_HALIMEDE");
    }
    #[test]
    fn test_reference_frame_iau_psamathe() {
        assert_eq!(
            PyFrame::IauPsamathe.name(),
            "IAU Body-Fixed Frame for Psamathe"
        );
        assert_eq!(PyFrame::IauPsamathe.abbreviation(), "IAU_PSAMATHE");
    }
    #[test]
    fn test_reference_frame_iau_sao() {
        assert_eq!(PyFrame::IauSao.name(), "IAU Body-Fixed Frame for Sao");
        assert_eq!(PyFrame::IauSao.abbreviation(), "IAU_SAO");
    }
    #[test]
    fn test_reference_frame_iau_laomedeia() {
        assert_eq!(
            PyFrame::IauLaomedeia.name(),
            "IAU Body-Fixed Frame for Laomedeia"
        );
        assert_eq!(PyFrame::IauLaomedeia.abbreviation(), "IAU_LAOMEDEIA");
    }
    #[test]
    fn test_reference_frame_iau_neso() {
        assert_eq!(PyFrame::IauNeso.name(), "IAU Body-Fixed Frame for Neso");
        assert_eq!(PyFrame::IauNeso.abbreviation(), "IAU_NESO");
    }
    #[test]
    fn test_reference_frame_iau_charon() {
        assert_eq!(PyFrame::IauCharon.name(), "IAU Body-Fixed Frame for Charon");
        assert_eq!(PyFrame::IauCharon.abbreviation(), "IAU_CHARON");
    }
    #[test]
    fn test_reference_frame_iau_nix() {
        assert_eq!(PyFrame::IauNix.name(), "IAU Body-Fixed Frame for Nix");
        assert_eq!(PyFrame::IauNix.abbreviation(), "IAU_NIX");
    }
    #[test]
    fn test_reference_frame_iau_hydra() {
        assert_eq!(PyFrame::IauHydra.name(), "IAU Body-Fixed Frame for Hydra");
        assert_eq!(PyFrame::IauHydra.abbreviation(), "IAU_HYDRA");
    }
    #[test]
    fn test_reference_frame_iau_kerberos() {
        assert_eq!(
            PyFrame::IauKerberos.name(),
            "IAU Body-Fixed Frame for Kerberos"
        );
        assert_eq!(PyFrame::IauKerberos.abbreviation(), "IAU_KERBEROS");
    }
    #[test]
    fn test_reference_frame_iau_styx() {
        assert_eq!(PyFrame::IauStyx.name(), "IAU Body-Fixed Frame for Styx");
        assert_eq!(PyFrame::IauStyx.abbreviation(), "IAU_STYX");
    }
    #[test]
    fn test_reference_frame_iau_gaspra() {
        assert_eq!(PyFrame::IauGaspra.name(), "IAU Body-Fixed Frame for Gaspra");
        assert_eq!(PyFrame::IauGaspra.abbreviation(), "IAU_GASPRA");
    }
    #[test]
    fn test_reference_frame_iau_ida() {
        assert_eq!(PyFrame::IauIda.name(), "IAU Body-Fixed Frame for Ida");
        assert_eq!(PyFrame::IauIda.abbreviation(), "IAU_IDA");
    }
    #[test]
    fn test_reference_frame_iau_dactyl() {
        assert_eq!(PyFrame::IauDactyl.name(), "IAU Body-Fixed Frame for Dactyl");
        assert_eq!(PyFrame::IauDactyl.abbreviation(), "IAU_DACTYL");
    }
    #[test]
    fn test_reference_frame_iau_ceres() {
        assert_eq!(PyFrame::IauCeres.name(), "IAU Body-Fixed Frame for Ceres");
        assert_eq!(PyFrame::IauCeres.abbreviation(), "IAU_CERES");
    }
    #[test]
    fn test_reference_frame_iau_pallas() {
        assert_eq!(PyFrame::IauPallas.name(), "IAU Body-Fixed Frame for Pallas");
        assert_eq!(PyFrame::IauPallas.abbreviation(), "IAU_PALLAS");
    }
    #[test]
    fn test_reference_frame_iau_vesta() {
        assert_eq!(PyFrame::IauVesta.name(), "IAU Body-Fixed Frame for Vesta");
        assert_eq!(PyFrame::IauVesta.abbreviation(), "IAU_VESTA");
    }
    #[test]
    fn test_reference_frame_iau_psyche() {
        assert_eq!(PyFrame::IauPsyche.name(), "IAU Body-Fixed Frame for Psyche");
        assert_eq!(PyFrame::IauPsyche.abbreviation(), "IAU_PSYCHE");
    }
    #[test]
    fn test_reference_frame_iau_lutetia() {
        assert_eq!(
            PyFrame::IauLutetia.name(),
            "IAU Body-Fixed Frame for Lutetia"
        );
        assert_eq!(PyFrame::IauLutetia.abbreviation(), "IAU_LUTETIA");
    }
    #[test]
    fn test_reference_frame_iau_kleopatra() {
        assert_eq!(
            PyFrame::IauKleopatra.name(),
            "IAU Body-Fixed Frame for Kleopatra"
        );
        assert_eq!(PyFrame::IauKleopatra.abbreviation(), "IAU_KLEOPATRA");
    }
    #[test]
    fn test_reference_frame_iau_eros() {
        assert_eq!(PyFrame::IauEros.name(), "IAU Body-Fixed Frame for Eros");
        assert_eq!(PyFrame::IauEros.abbreviation(), "IAU_EROS");
    }
    #[test]
    fn test_reference_frame_iau_davida() {
        assert_eq!(PyFrame::IauDavida.name(), "IAU Body-Fixed Frame for Davida");
        assert_eq!(PyFrame::IauDavida.abbreviation(), "IAU_DAVIDA");
    }
    #[test]
    fn test_reference_frame_iau_mathilde() {
        assert_eq!(
            PyFrame::IauMathilde.name(),
            "IAU Body-Fixed Frame for Mathilde"
        );
        assert_eq!(PyFrame::IauMathilde.abbreviation(), "IAU_MATHILDE");
    }
    #[test]
    fn test_reference_frame_iau_steins() {
        assert_eq!(PyFrame::IauSteins.name(), "IAU Body-Fixed Frame for Steins");
        assert_eq!(PyFrame::IauSteins.abbreviation(), "IAU_STEINS");
    }
    #[test]
    fn test_reference_frame_iau_braille() {
        assert_eq!(
            PyFrame::IauBraille.name(),
            "IAU Body-Fixed Frame for Braille"
        );
        assert_eq!(PyFrame::IauBraille.abbreviation(), "IAU_BRAILLE");
    }
    #[test]
    fn test_reference_frame_iau_wilson_harrington() {
        assert_eq!(
            PyFrame::IauWilsonHarrington.name(),
            "IAU Body-Fixed Frame for Wilson-Harrington"
        );
        assert_eq!(
            PyFrame::IauWilsonHarrington.abbreviation(),
            "IAU_WILSON_HARRINGTON"
        );
    }
    #[test]
    fn test_reference_frame_iau_toutatis() {
        assert_eq!(
            PyFrame::IauToutatis.name(),
            "IAU Body-Fixed Frame for Toutatis"
        );
        assert_eq!(PyFrame::IauToutatis.abbreviation(), "IAU_TOUTATIS");
    }
    #[test]
    fn test_reference_frame_iau_itokawa() {
        assert_eq!(
            PyFrame::IauItokawa.name(),
            "IAU Body-Fixed Frame for Itokawa"
        );
        assert_eq!(PyFrame::IauItokawa.abbreviation(), "IAU_ITOKAWA");
    }
    #[test]
    fn test_reference_frame_iau_bennu() {
        assert_eq!(PyFrame::IauBennu.name(), "IAU Body-Fixed Frame for Bennu");
        assert_eq!(PyFrame::IauBennu.abbreviation(), "IAU_BENNU");
    }
}
